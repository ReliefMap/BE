plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.fisa'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ============== SpringBoot ===================
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


	// ============== Auth ===================
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.7'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.7'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.7'

	// oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


	// ============== Test ===================
	// JUnit 5 런처 (테스트 실행 시 런타임에 필요)
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Boot 테스트 스타터 (JUnit 5, Mockito, AssertJ 등 포함)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Security 테스트용 헬퍼
	testImplementation 'org.springframework.security:spring-security-test'


	// ============== DB ===================
	// Driver(postgre)
	runtimeOnly 'org.postgresql:postgresql'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0'

	// Jakarta API
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

	// Redisson
	implementation 'org.redisson:redisson:3.27.2'


	// ============== Utils ===================
	// lombok
	compileOnly("org.projectlombok:lombok:1.18.30")
	annotationProcessor("org.projectlombok:lombok:1.18.30")
	testCompileOnly("org.projectlombok:lombok:1.18.30")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.30")

	// json
	implementation 'org.json:json:20240303'

}

tasks.named('test') {
	useJUnitPlatform()
}
